// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.InteropServices;


namespace Eina {
    
    
    public class Rectangle {
        
        protected IntPtr raw;
        
        public Rectangle() {
            raw = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(RectangleStruct)));
        }
        
        public System.IntPtr Raw {
            get {
                return this.raw;
            }
        }
        
        [StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential)]
        public struct RectangleStruct {
            
            public int x;
            
            public int y;
            
            public int w;
            
            public int h;
        }
    }
    
    public class F16p16 {
        
        protected int value;
        
        public F16p16(int v) {
            value = v;
        }
        
        public int Value {
            get {
                return this.value;
            }
        }
        
        public static   implicit operator F16p16(int v) {
            return new F16p16(v);
        }
        
        public static   implicit operator int(F16p16 v) {
            return v.value;
        }
    }
    
    public class Error {
        
        protected int value;
        
        public Error(int v) {
            value = v;
        }
        
        public int Value {
            get {
                return this.value;
            }
        }
        
        public static   implicit operator Error(int v) {
            return new Error(v);
        }
        
        public static   implicit operator int(Error v) {
            return v.value;
        }
    }
}
